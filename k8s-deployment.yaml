---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {APP_NAME}
  namespace: {NAME_SPACE}
  labels:
    app: {APP_NAME}
    env: {ADD_ENV_LABEL}
spec:
  replicas: 2
  selector:
    matchLabels:
      app: {APP_NAME}
      env: {ADD_ENV_LABEL}
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: {APP_NAME}
        env: {ADD_ENV_LABEL}
        armsPilotAutoEnable: "on"
        armsPilotCreateAppName: "{APP_NAME}_k8s"
    spec:
      terminationGracePeriodSeconds: 60
      imagePullSecrets:
      - name: aliregistry-secret
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: app
                  operator: In
                  values:
                  - {APP_NAME}
              topologyKey: kubernetes.io/hostname
            weight: 100
      containers:
      - env:
        - name: TZ
          value: Asia/Shanghai
        - name: LANG
          value: en_US.UTF-8
        image: {IMAGE_NAME}
        imagePullPolicy: IfNotPresent
        name: {APP_NAME}
        ports:
        - name: http
          containerPort: {APP_PORT}
          protocol: TCP
        lifecycle:
          preStop:
            exec:
              command: ["/bin/sh","-c","curl http://localhost:{APP_PORT}/update/nacos/instanse; sleep 30"]
        readinessProbe:
          failureThreshold: 2
          initialDelaySeconds: 40
          periodSeconds: 10
          successThreshold: 1
          #tcpSocket:
          #  port: {APP_PORT}
          httpGet:
            port: {APP_PORT}
            path: '/hello'
          timeoutSeconds: 2
        livenessProbe:
          failureThreshold: 2
          initialDelaySeconds: 40
          periodSeconds: 10
          successThreshold: 1
          #tcpSocket:
          #  port: {APP_PORT}
          httpGet:
            port: {APP_PORT}
            path: '/hello'
          timeoutSeconds: 2
        resources:
          requests:
            cpu: 500m
            memory: 512Mi
          limits:
            cpu: 2000m
            memory: 4096Mi
        volumeMounts:
        - mountPath: /data/logs
          name: logs
        - mountPath: /etc/localtime
          name: localtime
          readOnly: true
      dnsPolicy: ClusterFirstWithHostNet
      restartPolicy: Always
      securityContext:
        fsGroup: 2049
        runAsGroup: 2049
        runAsUser: 2049
      volumes:
      - emptyDir: {}
        name: logs
      - hostPath:
          path: /etc/localtime
          type: File
        name: localtime
